cmake_minimum_required(VERSION 3.11)
project(3.CONTROL_STATEMENTS)

message(STATUS "")
message(STATUS "Started all process in ${PROJECT_NAME} CMakeLists.txt.")
message(STATUS "")

message(STATUS "Example 1: contditionals - if, endif and else")
set(BOOL_VARIABLE1 TRUE)
set(BOOL_VARIABLE2 FALSE)

message(STATUS "Example 1.1: conditionals - if and else")
if(${BOOL_VARIABLE1})
    message(STATUS "BOOL_VARIABLE1 is TRUE")
else()
    message(STATUS "BOOL_VARIABLE1 is FALSE")
endif()
message("")

message(STATUS "Example 1.2: conditionals - elseif")
if(${BOOL_VARIABLE2})
    message(STATUS "BOOL_VARIABLE2 is TRUE")
elseif(${BOOL_VARIABLE1})
    message(STATUS "BOOL_VARIABLE1 is TRUE")
else()
    message(STATUS "BOOL_VARIABLE1 and BOOL_VARIABLE2 are FALSE")
endif()
message("")

message(STATUS "Example 2: conditionals - logical operators")
message(STATUS "Example 2.1: conditionals - NOT")
message(STATUS "Condition: NOT BOOL_VARIABLE1")

if(NOT ${BOOL_VARIABLE1})
    message(STATUS "BOOL_VARIABLE1 is FALSE")
endif()
message("")

message(STATUS "Example 2.2: conditionals - AND")
set(BOOL_VARIABLE2 TRUE)
if(${BOOL_VARIABLE1} AND ${BOOL_VARIABLE2})
    message(STATUS "BOOL_VARIABLE1 and BOOL_VARIABLE2 are TRUE")
endif()
message("")

message(STATUS "Example 2.3: conditionals - OR")
set(BOOL_VARIABLE2 FALSE)
if(${BOOL_VARIABLE1} OR ${BOOL_VARIABLE2})
    message(STATUS "BOOL_VARIABLE1 or BOOL_VARIABLE2 is TRUE")
endif()
message("")

message(STATUS "Example 3: conditionals - comparison operators")
set(NUMBER1 3)
set(NUMBER2 4)
message(STATUS "NUMBER1: ${NUMBER1}, NUMBER2: ${NUMBER2}")

message(STATUS "Example 3.1: conditionals - EQUAL")
if(${NUMBER1} EQUAL ${NUMBER2})
    message(STATUS "NUMBER1 == NUMBER2")
elseif(NOT(${NUMBER1}  EQUAL ${NUMBER2}))
    message(STATUS "NUMBER1 != NUMBER2")
endif()
message("")

message(STATUS "Example 3.2: conditionals - LESS")
if(${NUMBER1} LESS ${NUMBER2})
    message(STATUS "NUMBER1 < NUMBER2")
elseif(NOT(${NUMBER1} LESS ${NUMBER2}))
    message(STATUS "NUMBER1 >= NUMBER2")
endif()
message("")

message(STATUS "Example 3.3: conditionals - GREATER")
if(${NUMBER1} GREATER ${NUMBER2})
    message(STATUS "NUMBER1 > NUMBER2")
elseif(NOT(${NUMBER1} GREATER ${NUMBER2}))
    message(STATUS "NUMBER1 <= NUMBER2")
endif()
message("")

message(STATUS "Example 3.4: conditionals - LESS_EQUAL")
set(NUMBER1 3)
set(NUMBER2 3)
message(STATUS "NUMBER1: ${NUMBER1}, NUMBER2: ${NUMBER2}")
if(${NUMBER1} LESS_EQUAL ${NUMBER2})
    message(STATUS "NUMBER1 <= NUMBER2")
elseif(NOT(${NUMBER1} LESS_EQUAL ${NUMBER2}))
    message(STATUS "NUMBER1 > NUMBER2")
endif()
message("")

message(STATUS "Example 3.5: conditionals - GREATER_EQUAL")
if(${NUMBER1} GREATER_EQUAL ${NUMBER2})
    message(STATUS "NUMBER1 >= NUMBER2")
elseif(NOT(${NUMBER1} GREATER_EQUAL ${NUMBER2}))
    message(STATUS "NUMBER1 < NUMBER2")
endif()
message("")

message(STATUS "Example 4: conditionals - string operators")
set(STRING1 "abc.txt")
# set(STRING1 "a3.txt")
set(STRING2 "1ab2222")
message(STATUS "STRING1: ${STRING1}, STRING2: ${STRING2}")

message(STATUS "Example 4.1: conditionals - string EQUAL")
if(${STRING1} STREQUAL ${STRING2})
    message(STATUS "STRING1 == STRING2")
elseif(NOT(${STRING1} STREQUAL ${STRING2}))
    message(STATUS "STRING1 != STRING2")
endif()
message("")

message(STATUS "Example 5: conditionals - MATCHES")
message(STATUS "Example 5.1: conditionals - MATCHES - start with")
message(STATUS "Condition: STRING1 starts with 'abc'")
if(${STRING1} MATCHES "^abc")
    message(STATUS "STRING1 starts with 'abc'")
endif()
message("")

message(STATUS "Example 5.2: conditionals - MATCHES - end with")
message(STATUS "Condition: STRING1 ends with 'txt'")
if(${STRING1} MATCHES "txt$")
    message(STATUS "STRING1 ends with 'txt'")
endif()
message("")

message(STATUS "Example 5.3: conditionals - MATCHES - contain")
message(STATUS "Condition: STRING1 contains 'c1'")
if(${STRING1} MATCHES "c1")
    message(STATUS "STRING1 contains 'c1'")
else()
    message(STATUS "STRING1 does not contain 'c1'")
endif()
message(STATUS "")

message(STATUS "Example 5.4: conditionals - MATCHES - specific pattern")
message(STATUS "Condition: STRING1 included in '^[a-z][3].txt$'")
message(STATUS "STRING1: ${STRING1}")
if(${STRING1} MATCHES "^[a-z][3].txt")
    message(STATUS "STRING1 included in '^[a-z][3].txt'")
else()
    message(STATUS "STRING1 does not included in '^[a-z][3].txt'")
endif()
message(STATUS "")

message(STATUS "Example 6: conditionals - IN_LIST")
set(STRING_LIST "a" "b" "c" "d" "e")
message(STATUS "STRING_LIST: ${STRING_LIST}")
message(STATUS "STRING1: ${STRING1}")
message(STATUS "Example 6.1: conditionals - IN_LIST - in list")
message(STATUS "Condition: STRING1 in STRING_LIST")
if(${STRING1} IN_LIST STRING_LIST)
    message(STATUS "STRING1 in STRING_LIST")
else()
    message(STATUS "STRING1 not in STRING_LIST")
endif()
message("")

message(STATUS "Example 6.2: conditionals - IN_LIST - not in list")
message(STATUS "Condition: STRING2 not in STRING_LIST")
message(STATUS "STRING_LIST: ${STRING_LIST}")
message(STATUS "STRING2: ${STRING2}")
if(NOT(${STRING2} IN_LIST STRING_LIST))
    message(STATUS "STRING2 not in STRING_LIST")
endif()
message("")

message(STATUS "Example 7: conditionals - DEFINED")
message(STATUS "Example 7.1: conditionals - DEFINED - defined")
message(STATUS "Condition: STRING3 defined")
if(DEFINED STRING3)
    message(STATUS "STRING3 defined")
else()
    message(STATUS "STRING3 not defined")
endif()
message("")

message(STATUS "Example 7.2: conditionals - DEFINED - not defined")
message(STATUS "Condition: STRING3 not defined")
if(NOT DEFINED STRING3)
    message(STATUS "STRING3 not defined")
endif()
message(STATUS "")

message(STATUS "Example 7.3: conditionals - DEFINED - empty")
set(STRING3)
# set(STRING3 "Hello, World!")
message(STATUS "Condition: STRING3 empty")
if(STRING3)
    message(STATUS "STRING3 is not empty")
else()
    message(STATUS "STRING3 is empty")
endif()
message(STATUS "")

message(STATUS "Example 8: conditionals - COMMAND")
message(STATUS "Example 8.1: conditionals - COMMAND - exist")
message(STATUS "Condition: COMMAND project exists")

if(COMMAND project)
    message(STATUS "COMMAND project exists")
else()
    message(STATUS "COMMAND project does not exist")
endif()
message("")

message(STATUS "Example 8.2: conditionals - COMMAND - not exist")
message(STATUS "Condition: COMMAND project2 does not exist")
if(NOT COMMAND project2)
    message(STATUS "COMMAND project2 does not exist")
endif()
message("")

message(STATUS "Example 9: conditionals - TARGET")
message(STATUS "Example 9.1: conditionals - TARGET - exist")
message(STATUS "Condition: TARGET project exists")
if(TARGET project)
    message(STATUS "TARGET project exists")
else()
    message(STATUS "TARGET project does not exist")
endif()
message(STATUS "")

message(STATUS "Example 9.2: conditionals - TARGET - not exist")
message(STATUS "Condition: TARGET project2 does not exist")
if(NOT(TARGET project2))
    message(STATUS "TARGET project2 does not exist")
endif()
message("")

message(STATUS "Example 10: loops")
message(STATUS "Example 10.1: foreach")
message(STATUS "STRING_LSIT: ${STRING_LIST}")
foreach(ELEMENT ${STRING_LIST})
    message(STATUS "STRING: ${ELEMENT}")
endforeach()
message("")

message(STATUS "Example 10.2: foreach - range")
message(STATUS "NUMBER1: ${NUMBER1}, NUMBER2: ${NUMBER2}")
foreach(NUM RANGE 5)
    message(STATUS "NUMBER: ${NUM}")
endforeach()
message("")

message(STATUS "Example 10.2: foreach - range with step")
foreach(NUM RANGE 2 6 2)
    message(STATUS "NUMBER: ${NUM}")
endforeach()
message("")

message(STATUS "Example 10.3: while")
set(INDEX 0)
while(${INDEX} LESS 5)
    message(STATUS "INDEX: ${INDEX}")
    math(EXPR INDEX "${INDEX} + 1")
endwhile()
message("")

message(STATUS "")
message(STATUS "Finished all process in ${PROJECT_NAME} CMakeLists.txt.")
message(STATUS "")